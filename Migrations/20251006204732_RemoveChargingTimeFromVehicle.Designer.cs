// <auto-generated />
using System;
using EV_RENTAL_SYSTEM.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EV_RENTAL_SYSTEM.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251006204732_RemoveChargingTimeFromVehicle")]
    partial class RemoveChargingTimeFromVehicle
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Brand_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Brand_name");

                    b.HasKey("BrandId");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Complaint", b =>
                {
                    b.Property<int>("ComplaintId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Complaint_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ComplaintId"));

                    b.Property<DateTime>("ComplaintDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Complaint_date");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("ComplaintId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Complaint");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Contract", b =>
                {
                    b.Property<int>("ContractId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Contract_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractId"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_date");

                    b.Property<decimal?>("Deposit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal?>("ExtraFee")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Extra_fee");

                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<decimal?>("RentalFee")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Rental_fee");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ContractId");

                    b.HasIndex("OrderId");

                    b.ToTable("Contract");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.ContractProcessing", b =>
                {
                    b.Property<int>("ContractProcessingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ContractProcessing_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ContractProcessingId"));

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("Contract_Id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("StepId")
                        .HasColumnType("int")
                        .HasColumnName("Step_Id");

                    b.HasKey("ContractProcessingId");

                    b.HasIndex("ContractId");

                    b.HasIndex("StepId");

                    b.ToTable("ContractProcessing");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.License", b =>
                {
                    b.Property<int>("LicenseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("License_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LicenseId"));

                    b.Property<DateTime>("ExpiryDate")
                        .HasColumnType("date")
                        .HasColumnName("Expiry_date");

                    b.Property<string>("LicenseImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("License_ImageUrl");

                    b.Property<string>("LicenseNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("License_number");

                    b.Property<string>("LicenseTypeId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("License_type_Id");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("LicenseId");

                    b.HasIndex("LicenseNumber")
                        .IsUnique();

                    b.HasIndex("LicenseTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("License");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.LicensePlate", b =>
                {
                    b.Property<string>("LicensePlateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("License_plate_Id");

                    b.Property<string>("Condition")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("RegistrationDate")
                        .HasColumnType("date")
                        .HasColumnName("Registration_date");

                    b.Property<int>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("Station_Id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int")
                        .HasColumnName("Vehicle_Id");

                    b.HasKey("LicensePlateId");

                    b.HasIndex("StationId");

                    b.HasIndex("VehicleId");

                    b.ToTable("LicensePlate");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.LicenseType", b =>
                {
                    b.Property<string>("LicenseTypeId")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("License_type_Id");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Type_name");

                    b.HasKey("LicenseTypeId");

                    b.ToTable("LicenseType");

                    b.HasData(
                        new
                        {
                            LicenseTypeId = "A1",
                            Description = "Motorcycle up to 125cc",
                            TypeName = "A1"
                        },
                        new
                        {
                            LicenseTypeId = "A2",
                            Description = "Motorcycle up to 175cc",
                            TypeName = "A2"
                        },
                        new
                        {
                            LicenseTypeId = "A",
                            Description = "Unlimited motorcycle",
                            TypeName = "A"
                        },
                        new
                        {
                            LicenseTypeId = "B1",
                            Description = "Car up to 9 seats",
                            TypeName = "B1"
                        },
                        new
                        {
                            LicenseTypeId = "B2",
                            Description = "Unlimited car",
                            TypeName = "B2"
                        });
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Maintenance", b =>
                {
                    b.Property<int>("MaintenanceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Maintenance_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaintenanceId"));

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("LicensePlateId")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("License_plate_Id");

                    b.Property<DateTime?>("MaintenanceDate")
                        .HasColumnType("date")
                        .HasColumnName("Maintenance_date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("MaintenanceId");

                    b.HasIndex("LicensePlateId");

                    b.ToTable("Maintenance");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<DateTime?>("EndTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("End_time");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Order_date");

                    b.Property<DateTime?>("StartTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("Start_time");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Total_amount");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("OrderId");

                    b.HasIndex("UserId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Order_LicensePlate", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("Order_Id");

                    b.Property<string>("LicensePlateId")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("License_plate_Id");

                    b.HasKey("OrderId", "LicensePlateId");

                    b.HasIndex("LicensePlateId");

                    b.ToTable("Order_LicensePlate");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Payment_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ContractId")
                        .HasColumnType("int")
                        .HasColumnName("Contract_Id");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Payment_date");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("PaymentId");

                    b.HasIndex("ContractId");

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.ProcessStep", b =>
                {
                    b.Property<int>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Step_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StepId"));

                    b.Property<string>("StepName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Step_name");

                    b.Property<string>("Terms")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("StepId");

                    b.ToTable("ProcessStep");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Role_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Role_name");

                    b.HasKey("RoleId");

                    b.ToTable("Role");

                    b.HasData(
                        new
                        {
                            RoleId = 1,
                            Description = "System Administrator",
                            RoleName = "Admin"
                        },
                        new
                        {
                            RoleId = 2,
                            Description = "Station Staff Member",
                            RoleName = "Station Staff"
                        },
                        new
                        {
                            RoleId = 3,
                            Description = "Electric Vehicle Renter",
                            RoleName = "EV Renter"
                        });
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Station", b =>
                {
                    b.Property<int>("StationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Station_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StationId"));

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("District")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("StationName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("Station_name");

                    b.Property<string>("Street")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StationId");

                    b.ToTable("Station");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Transaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Transaction_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransactionId"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("Payment_Id");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("datetime2")
                        .HasColumnName("Transaction_date");

                    b.Property<int>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    b.HasKey("TransactionId");

                    b.HasIndex("PaymentId");

                    b.HasIndex("UserId");

                    b.ToTable("Transaction");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("User_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<DateTime?>("Birthday")
                        .HasColumnType("date");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasColumnName("Created_at")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("Full_name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("Phone_number");

                    b.Property<int>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("Role_Id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("Vehicle_Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<decimal?>("Battery")
                        .HasColumnType("decimal(5,2)")
                        .HasColumnName("Battery");

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("Brand_Id");

                    b.Property<decimal?>("ChargingTime")
                        .HasColumnType("decimal(4,1)")
                        .HasColumnName("Charging_time");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ModelYear")
                        .HasColumnType("int")
                        .HasColumnName("Model_year");

                    b.Property<decimal?>("PricePerDay")
                        .HasColumnType("decimal(10,2)")
                        .HasColumnName("Price_per_day");

                    b.Property<int?>("RangeKm")
                        .HasColumnType("int")
                        .HasColumnName("Range_km");

                    b.Property<int?>("SeatNumber")
                        .HasColumnType("int")
                        .HasColumnName("Seat_number");

                    b.Property<int?>("StationId")
                        .HasColumnType("int")
                        .HasColumnName("Station_Id");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Status");

                    b.Property<string>("VehicleImage")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("Vehicle_image");

                    b.Property<string>("VehicleType")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("Vehicle_type");

                    b.HasKey("VehicleId");

                    b.HasIndex("BrandId");

                    b.HasIndex("StationId");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Complaint", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.Order", "Order")
                        .WithMany("Complaints")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EV_RENTAL_SYSTEM.Models.User", "User")
                        .WithMany("Complaints")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Contract", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.Order", "Order")
                        .WithMany("Contracts")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.ContractProcessing", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.Contract", "Contract")
                        .WithMany("ContractProcessings")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EV_RENTAL_SYSTEM.Models.ProcessStep", "ProcessStep")
                        .WithMany("ContractProcessings")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contract");

                    b.Navigation("ProcessStep");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.License", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.LicenseType", "LicenseType")
                        .WithMany("Licenses")
                        .HasForeignKey("LicenseTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EV_RENTAL_SYSTEM.Models.User", "User")
                        .WithMany("Licenses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LicenseType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.LicensePlate", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.Station", "Station")
                        .WithMany("LicensePlates")
                        .HasForeignKey("StationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EV_RENTAL_SYSTEM.Models.Vehicle", "Vehicle")
                        .WithMany("LicensePlates")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Station");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Maintenance", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.LicensePlate", "LicensePlate")
                        .WithMany("Maintenances")
                        .HasForeignKey("LicensePlateId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LicensePlate");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Order", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Order_LicensePlate", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.LicensePlate", "LicensePlate")
                        .WithMany("OrderLicensePlates")
                        .HasForeignKey("LicensePlateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EV_RENTAL_SYSTEM.Models.Order", "Order")
                        .WithMany("OrderLicensePlates")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("LicensePlate");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Payment", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.Contract", "Contract")
                        .WithMany("Payments")
                        .HasForeignKey("ContractId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Contract");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Transaction", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.Payment", "Payment")
                        .WithMany("Transactions")
                        .HasForeignKey("PaymentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EV_RENTAL_SYSTEM.Models.User", "User")
                        .WithMany("Transactions")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Payment");

                    b.Navigation("User");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.User", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Vehicle", b =>
                {
                    b.HasOne("EV_RENTAL_SYSTEM.Models.Brand", "Brand")
                        .WithMany("Vehicles")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("EV_RENTAL_SYSTEM.Models.Station", "Station")
                        .WithMany("Vehicles")
                        .HasForeignKey("StationId");

                    b.Navigation("Brand");

                    b.Navigation("Station");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Brand", b =>
                {
                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Contract", b =>
                {
                    b.Navigation("ContractProcessings");

                    b.Navigation("Payments");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.LicensePlate", b =>
                {
                    b.Navigation("Maintenances");

                    b.Navigation("OrderLicensePlates");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.LicenseType", b =>
                {
                    b.Navigation("Licenses");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Order", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("Contracts");

                    b.Navigation("OrderLicensePlates");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Payment", b =>
                {
                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.ProcessStep", b =>
                {
                    b.Navigation("ContractProcessings");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Station", b =>
                {
                    b.Navigation("LicensePlates");

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.User", b =>
                {
                    b.Navigation("Complaints");

                    b.Navigation("Licenses");

                    b.Navigation("Orders");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("EV_RENTAL_SYSTEM.Models.Vehicle", b =>
                {
                    b.Navigation("LicensePlates");
                });
#pragma warning restore 612, 618
        }
    }
}
